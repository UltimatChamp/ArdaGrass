plugins {
    id "fabric-loom" version "1.7.+"
    id "me.modmuss50.mod-publish-plugin" version "0.5.2"
}

// for snapshots
def mcVer = ""
for (char c in (property("deps.minecraft_version") as List<Character>)) {
    if (c.toString() != "-") {
        mcVer += c
    }
}

version = project.mod_version + "+" + mcVer
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

loom {
    runConfigs.all {
        ideConfigGenerated true
        runDir "../../run"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${property("deps.minecraft_version")}"
    mappings "net.fabricmc:yarn:${property("deps.yarn_mappings")}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${property("deps.fabric_version")}"
    modImplementation "maven.modrinth:yacl:${property("deps.yacl_version")}"
    modImplementation "maven.modrinth:modmenu:${property("deps.modmenu_version")}"
    modImplementation "maven.modrinth:sodium:${property("deps.sodium_version")}"
}

if (stonecutter.current.isActive) {
    rootProject.tasks.register("buildActive") {
        group = "project"
        dependsOn(tasks.named("build"))
        dependsOn(tasks.named("publishMods"))
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcrange", project.property("deps.mc_range")

    filesMatching("fabric.mod.json") {
        expand "version": project.version, "mcrange": project.property("deps.mc_range")
    }
}

def targetJavaVersion
if ("${project.version}".contains("1.20"))
    targetJavaVersion = 17
else
    targetJavaVersion = 21

tasks.withType(JavaCompile).configureEach {
    it.options.release = targetJavaVersion
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

publishMods {
    changelog = "# ${project.version}\n" + file("CHANGELOG.md").text
    type = STABLE
    file = remapJar.archiveFile
    modLoaders.add("fabric")
    displayName = "FabricBetterGrass ${project.version}"

    if ("${project.version}".contains("1.20")) {
        modrinth("m1.20.x") {
            projectId = "m5T5xmUy"
            accessToken = providers.environmentVariable("MODRINTH_TOKEN")
            requires("fabric-api", "yacl")
            minecraftVersionRange {
                start = "1.20"
                end = "1.20.6"
            }

            // Discord
            announcementTitle = "Download from Modrinth"
        }

        curseforge("c1.20.x") {
            projectId = "1026394"
            accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
            requires("fabric-api", "yacl")
            minecraftVersionRange {
                start = "1.20"
                end = "1.20.6"
            }

            // Discord
            announcementTitle = "Download from CurseForge"
            projectSlug = "fabricbettergrass"
        }
    }

    if ("${project.version}".contains("1.21")) {
        modrinth("m1.21") {
            projectId = "m5T5xmUy"
            accessToken = providers.environmentVariable("MODRINTH_TOKEN")
            requires("fabric-api", "yacl")
            minecraftVersions.add("1.21")

            // Discord
            announcementTitle = "Download from Modrinth"
        }

        curseforge("c1.21") {
            projectId = "1026394"
            accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
            requires("fabric-api", "yacl")
            minecraftVersions.add("1.21")

            // Discord
            announcementTitle = "Download from CurseForge"
            projectSlug = "fabricbettergrass"
        }
    }

    github {
        accessToken = providers.environmentVariable("GITHUB_TOKEN")
        repository = "UltimatChamp/FabricBetterGrass"
        commitish = "main"

        // Discord
        announcementTitle = "Download from GitHub"
    }

    discord {
        webhookUrl = providers.environmentVariable("DISCORD_WEBHOOK")
        username = "FabricBetterGrass Releases"
        avatarUrl = "https://cdn.modrinth.com/data/m5T5xmUy/c67c1f900e8344e462bb5c21fb512579f3b0be46.png"
    }
}
